/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * AccountLimits
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class AccountLimits {
  @SerializedName("freeSoftPhoneLinesPerExtension")
  private Integer freeSoftPhoneLinesPerExtension = null;

  @SerializedName("meetingSize")
  private Integer meetingSize = null;

  @SerializedName("maxMonitoredExtensionsPerUser")
  private Integer maxMonitoredExtensionsPerUser = null;

  public AccountLimits freeSoftPhoneLinesPerExtension(Integer freeSoftPhoneLinesPerExtension) {
    this.freeSoftPhoneLinesPerExtension = freeSoftPhoneLinesPerExtension;
    return this;
  }

   /**
   * The maximum number of free softphone digital lines per user extension
   * @return freeSoftPhoneLinesPerExtension
  **/
  @ApiModelProperty(example = "null", value = "The maximum number of free softphone digital lines per user extension")
  public Integer getFreeSoftPhoneLinesPerExtension() {
    return freeSoftPhoneLinesPerExtension;
  }

  public void setFreeSoftPhoneLinesPerExtension(Integer freeSoftPhoneLinesPerExtension) {
    this.freeSoftPhoneLinesPerExtension = freeSoftPhoneLinesPerExtension;
  }

  public AccountLimits meetingSize(Integer meetingSize) {
    this.meetingSize = meetingSize;
    return this;
  }

   /**
   * The maximum number of participants in RingCentral Meeting hosted by this account's user
   * @return meetingSize
  **/
  @ApiModelProperty(example = "null", value = "The maximum number of participants in RingCentral Meeting hosted by this account's user")
  public Integer getMeetingSize() {
    return meetingSize;
  }

  public void setMeetingSize(Integer meetingSize) {
    this.meetingSize = meetingSize;
  }

  public AccountLimits maxMonitoredExtensionsPerUser(Integer maxMonitoredExtensionsPerUser) {
    this.maxMonitoredExtensionsPerUser = maxMonitoredExtensionsPerUser;
    return this;
  }

   /**
   * The maximum number of extensions which can be included in the list of users monitored for Presence
   * @return maxMonitoredExtensionsPerUser
  **/
  @ApiModelProperty(example = "null", value = "The maximum number of extensions which can be included in the list of users monitored for Presence")
  public Integer getMaxMonitoredExtensionsPerUser() {
    return maxMonitoredExtensionsPerUser;
  }

  public void setMaxMonitoredExtensionsPerUser(Integer maxMonitoredExtensionsPerUser) {
    this.maxMonitoredExtensionsPerUser = maxMonitoredExtensionsPerUser;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLimits accountLimits = (AccountLimits) o;
    return Objects.equals(this.freeSoftPhoneLinesPerExtension, accountLimits.freeSoftPhoneLinesPerExtension) &&
        Objects.equals(this.meetingSize, accountLimits.meetingSize) &&
        Objects.equals(this.maxMonitoredExtensionsPerUser, accountLimits.maxMonitoredExtensionsPerUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(freeSoftPhoneLinesPerExtension, meetingSize, maxMonitoredExtensionsPerUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLimits {\n");
    
    sb.append("    freeSoftPhoneLinesPerExtension: ").append(toIndentedString(freeSoftPhoneLinesPerExtension)).append("\n");
    sb.append("    meetingSize: ").append(toIndentedString(meetingSize)).append("\n");
    sb.append("    maxMonitoredExtensionsPerUser: ").append(toIndentedString(maxMonitoredExtensionsPerUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

