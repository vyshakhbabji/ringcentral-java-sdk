/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * LookUpPhoneNumberPhoneNumberInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class LookUpPhoneNumberPhoneNumberInfo {
  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("formattedNumber")
  private String formattedNumber = null;

  @SerializedName("vanityPattern")
  private String vanityPattern = null;

  @SerializedName("rank")
  private Integer rank = null;

  public LookUpPhoneNumberPhoneNumberInfo phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Phone number in E.164 format without a '+'
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "null", value = "Phone number in E.164 format without a '+'")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public LookUpPhoneNumberPhoneNumberInfo formattedNumber(String formattedNumber) {
    this.formattedNumber = formattedNumber;
    return this;
  }

   /**
   * Phone number formatted according to current brand's default country
   * @return formattedNumber
  **/
  @ApiModelProperty(example = "null", value = "Phone number formatted according to current brand's default country")
  public String getFormattedNumber() {
    return formattedNumber;
  }

  public void setFormattedNumber(String formattedNumber) {
    this.formattedNumber = formattedNumber;
  }

  public LookUpPhoneNumberPhoneNumberInfo vanityPattern(String vanityPattern) {
    this.vanityPattern = vanityPattern;
    return this;
  }

   /**
   * Vanity pattern for this number. Returned only when vanity search option is requested. Vanity pattern corresponds to request parameters nxx plus line or numberPattern
   * @return vanityPattern
  **/
  @ApiModelProperty(example = "null", value = "Vanity pattern for this number. Returned only when vanity search option is requested. Vanity pattern corresponds to request parameters nxx plus line or numberPattern")
  public String getVanityPattern() {
    return vanityPattern;
  }

  public void setVanityPattern(String vanityPattern) {
    this.vanityPattern = vanityPattern;
  }

  public LookUpPhoneNumberPhoneNumberInfo rank(Integer rank) {
    this.rank = rank;
    return this;
  }

   /**
   * The value is returned if the extendedSearch parameter is true. '10' is the closest match
   * @return rank
  **/
  @ApiModelProperty(example = "null", value = "The value is returned if the extendedSearch parameter is true. '10' is the closest match")
  public Integer getRank() {
    return rank;
  }

  public void setRank(Integer rank) {
    this.rank = rank;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LookUpPhoneNumberPhoneNumberInfo lookUpPhoneNumberPhoneNumberInfo = (LookUpPhoneNumberPhoneNumberInfo) o;
    return Objects.equals(this.phoneNumber, lookUpPhoneNumberPhoneNumberInfo.phoneNumber) &&
        Objects.equals(this.formattedNumber, lookUpPhoneNumberPhoneNumberInfo.formattedNumber) &&
        Objects.equals(this.vanityPattern, lookUpPhoneNumberPhoneNumberInfo.vanityPattern) &&
        Objects.equals(this.rank, lookUpPhoneNumberPhoneNumberInfo.rank);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, formattedNumber, vanityPattern, rank);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LookUpPhoneNumberPhoneNumberInfo {\n");
    
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    formattedNumber: ").append(toIndentedString(formattedNumber)).append("\n");
    sb.append("    vanityPattern: ").append(toIndentedString(vanityPattern)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

