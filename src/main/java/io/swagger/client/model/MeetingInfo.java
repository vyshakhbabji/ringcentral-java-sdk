/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LinksInfo;
import io.swagger.client.model.MeetingScheduleInfo;
import java.util.ArrayList;
import java.util.List;

/**
 * MeetingInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class MeetingInfo {
  @SerializedName("uri")
  private String uri = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("topic")
  private String topic = null;

  /**
   * Type of a meeting
   */
  public enum MeetingTypeEnum {
    @SerializedName("Scheduled")
    SCHEDULED("Scheduled"),
    
    @SerializedName("Instant")
    INSTANT("Instant"),
    
    @SerializedName("Recurring")
    RECURRING("Recurring");

    private String value;

    MeetingTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("meetingType")
  private MeetingTypeEnum meetingType = null;

  @SerializedName("password")
  private String password = null;

  /**
   * Current status of a meeting
   */
  public enum StatusEnum {
    @SerializedName("NotStarted")
    NOTSTARTED("NotStarted"),
    
    @SerializedName("Started")
    STARTED("Started");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("links")
  private LinksInfo links = null;

  @SerializedName("schedule")
  private MeetingScheduleInfo schedule = null;

  @SerializedName("allowJoinBeforeHost")
  private Boolean allowJoinBeforeHost = null;

  @SerializedName("startHostVideo")
  private Boolean startHostVideo = null;

  @SerializedName("startParticipantsVideo")
  private Boolean startParticipantsVideo = null;

  @SerializedName("audioOptions")
  private List<String> audioOptions = new ArrayList<String>();

  public MeetingInfo uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Canonical URI of a meeting resource
   * @return uri
  **/
  @ApiModelProperty(example = "null", value = "Canonical URI of a meeting resource")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public MeetingInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Internal identifier of a meeting as retrieved from Zoom
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Internal identifier of a meeting as retrieved from Zoom")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MeetingInfo topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * Topic of a meeting
   * @return topic
  **/
  @ApiModelProperty(example = "null", value = "Topic of a meeting")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public MeetingInfo meetingType(MeetingTypeEnum meetingType) {
    this.meetingType = meetingType;
    return this;
  }

   /**
   * Type of a meeting
   * @return meetingType
  **/
  @ApiModelProperty(example = "null", value = "Type of a meeting")
  public MeetingTypeEnum getMeetingType() {
    return meetingType;
  }

  public void setMeetingType(MeetingTypeEnum meetingType) {
    this.meetingType = meetingType;
  }

  public MeetingInfo password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password required to join a meeting
   * @return password
  **/
  @ApiModelProperty(example = "null", value = "Password required to join a meeting")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public MeetingInfo status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Current status of a meeting
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "Current status of a meeting")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public MeetingInfo links(LinksInfo links) {
    this.links = links;
    return this;
  }

   /**
   * Links to start/join the meeting
   * @return links
  **/
  @ApiModelProperty(example = "null", value = "Links to start/join the meeting")
  public LinksInfo getLinks() {
    return links;
  }

  public void setLinks(LinksInfo links) {
    this.links = links;
  }

  public MeetingInfo schedule(MeetingScheduleInfo schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Schedule of a meeting
   * @return schedule
  **/
  @ApiModelProperty(example = "null", value = "Schedule of a meeting")
  public MeetingScheduleInfo getSchedule() {
    return schedule;
  }

  public void setSchedule(MeetingScheduleInfo schedule) {
    this.schedule = schedule;
  }

  public MeetingInfo allowJoinBeforeHost(Boolean allowJoinBeforeHost) {
    this.allowJoinBeforeHost = allowJoinBeforeHost;
    return this;
  }

   /**
   * If 'True' then the meeting can be joined and started by any participant (not host only). Supported for the meetings of 'Scheduled' and 'Recurring' type.
   * @return allowJoinBeforeHost
  **/
  @ApiModelProperty(example = "null", value = "If 'True' then the meeting can be joined and started by any participant (not host only). Supported for the meetings of 'Scheduled' and 'Recurring' type.")
  public Boolean getAllowJoinBeforeHost() {
    return allowJoinBeforeHost;
  }

  public void setAllowJoinBeforeHost(Boolean allowJoinBeforeHost) {
    this.allowJoinBeforeHost = allowJoinBeforeHost;
  }

  public MeetingInfo startHostVideo(Boolean startHostVideo) {
    this.startHostVideo = startHostVideo;
    return this;
  }

   /**
   * Enables starting video when host joins the meeting
   * @return startHostVideo
  **/
  @ApiModelProperty(example = "null", value = "Enables starting video when host joins the meeting")
  public Boolean getStartHostVideo() {
    return startHostVideo;
  }

  public void setStartHostVideo(Boolean startHostVideo) {
    this.startHostVideo = startHostVideo;
  }

  public MeetingInfo startParticipantsVideo(Boolean startParticipantsVideo) {
    this.startParticipantsVideo = startParticipantsVideo;
    return this;
  }

   /**
   * Enables starting video when participants join the meeting
   * @return startParticipantsVideo
  **/
  @ApiModelProperty(example = "null", value = "Enables starting video when participants join the meeting")
  public Boolean getStartParticipantsVideo() {
    return startParticipantsVideo;
  }

  public void setStartParticipantsVideo(Boolean startParticipantsVideo) {
    this.startParticipantsVideo = startParticipantsVideo;
  }

  public MeetingInfo audioOptions(List<String> audioOptions) {
    this.audioOptions = audioOptions;
    return this;
  }

  public MeetingInfo addAudioOptionsItem(String audioOptionsItem) {
    this.audioOptions.add(audioOptionsItem);
    return this;
  }

   /**
   * Meeting audio options. Possible values are 'Phone', 'ComputerAudio'
   * @return audioOptions
  **/
  @ApiModelProperty(example = "null", value = "Meeting audio options. Possible values are 'Phone', 'ComputerAudio'")
  public List<String> getAudioOptions() {
    return audioOptions;
  }

  public void setAudioOptions(List<String> audioOptions) {
    this.audioOptions = audioOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingInfo meetingInfo = (MeetingInfo) o;
    return Objects.equals(this.uri, meetingInfo.uri) &&
        Objects.equals(this.id, meetingInfo.id) &&
        Objects.equals(this.topic, meetingInfo.topic) &&
        Objects.equals(this.meetingType, meetingInfo.meetingType) &&
        Objects.equals(this.password, meetingInfo.password) &&
        Objects.equals(this.status, meetingInfo.status) &&
        Objects.equals(this.links, meetingInfo.links) &&
        Objects.equals(this.schedule, meetingInfo.schedule) &&
        Objects.equals(this.allowJoinBeforeHost, meetingInfo.allowJoinBeforeHost) &&
        Objects.equals(this.startHostVideo, meetingInfo.startHostVideo) &&
        Objects.equals(this.startParticipantsVideo, meetingInfo.startParticipantsVideo) &&
        Objects.equals(this.audioOptions, meetingInfo.audioOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, id, topic, meetingType, password, status, links, schedule, allowJoinBeforeHost, startHostVideo, startParticipantsVideo, audioOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingInfo {\n");
    
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    meetingType: ").append(toIndentedString(meetingType)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    allowJoinBeforeHost: ").append(toIndentedString(allowJoinBeforeHost)).append("\n");
    sb.append("    startHostVideo: ").append(toIndentedString(startHostVideo)).append("\n");
    sb.append("    startParticipantsVideo: ").append(toIndentedString(startParticipantsVideo)).append("\n");
    sb.append("    audioOptions: ").append(toIndentedString(audioOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

