/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.RingOutRequestCountryInfo;
import io.swagger.client.model.RingOutRequestFrom;
import io.swagger.client.model.RingOutRequestTo;

/**
 * Body11
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class Body11 {
  @SerializedName("from")
  private RingOutRequestFrom from = null;

  @SerializedName("to")
  private RingOutRequestTo to = null;

  @SerializedName("callerId")
  private RingOutRequestTo callerId = null;

  @SerializedName("playPrompt")
  private Boolean playPrompt = null;

  @SerializedName("country")
  private RingOutRequestCountryInfo country = null;

  public Body11 from(RingOutRequestFrom from) {
    this.from = from;
    return this;
  }

   /**
   * Phone number of the caller. This number corresponds to the 1st leg of the RingOut call. This number can be one of user's configured forwarding numbers or arbitrary number
   * @return from
  **/
  @ApiModelProperty(example = "null", value = "Phone number of the caller. This number corresponds to the 1st leg of the RingOut call. This number can be one of user's configured forwarding numbers or arbitrary number")
  public RingOutRequestFrom getFrom() {
    return from;
  }

  public void setFrom(RingOutRequestFrom from) {
    this.from = from;
  }

  public Body11 to(RingOutRequestTo to) {
    this.to = to;
    return this;
  }

   /**
   * Phone number of the called party. This number corresponds to the 2nd leg of the RingOut call
   * @return to
  **/
  @ApiModelProperty(example = "null", value = "Phone number of the called party. This number corresponds to the 2nd leg of the RingOut call")
  public RingOutRequestTo getTo() {
    return to;
  }

  public void setTo(RingOutRequestTo to) {
    this.to = to;
  }

  public Body11 callerId(RingOutRequestTo callerId) {
    this.callerId = callerId;
    return this;
  }

   /**
   * The number which will be displayed to the called party
   * @return callerId
  **/
  @ApiModelProperty(example = "null", value = "The number which will be displayed to the called party")
  public RingOutRequestTo getCallerId() {
    return callerId;
  }

  public void setCallerId(RingOutRequestTo callerId) {
    this.callerId = callerId;
  }

  public Body11 playPrompt(Boolean playPrompt) {
    this.playPrompt = playPrompt;
    return this;
  }

   /**
   * The audio prompt that the calling party hears when the call is connected
   * @return playPrompt
  **/
  @ApiModelProperty(example = "null", value = "The audio prompt that the calling party hears when the call is connected")
  public Boolean getPlayPrompt() {
    return playPrompt;
  }

  public void setPlayPrompt(Boolean playPrompt) {
    this.playPrompt = playPrompt;
  }

  public Body11 country(RingOutRequestCountryInfo country) {
    this.country = country;
    return this;
  }

   /**
   * Optional. Dialing plan country data. If not specified, then extension home country is applied by default
   * @return country
  **/
  @ApiModelProperty(example = "null", value = "Optional. Dialing plan country data. If not specified, then extension home country is applied by default")
  public RingOutRequestCountryInfo getCountry() {
    return country;
  }

  public void setCountry(RingOutRequestCountryInfo country) {
    this.country = country;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body11 body11 = (Body11) o;
    return Objects.equals(this.from, body11.from) &&
        Objects.equals(this.to, body11.to) &&
        Objects.equals(this.callerId, body11.callerId) &&
        Objects.equals(this.playPrompt, body11.playPrompt) &&
        Objects.equals(this.country, body11.country);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, callerId, playPrompt, country);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body11 {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    callerId: ").append(toIndentedString(callerId)).append("\n");
    sb.append("    playPrompt: ").append(toIndentedString(playPrompt)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

