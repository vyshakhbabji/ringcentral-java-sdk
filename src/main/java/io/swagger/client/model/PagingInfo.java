/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * PagingInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class PagingInfo {
  @SerializedName("page")
  private Integer page = null;

  @SerializedName("perPage")
  private Integer perPage = null;

  @SerializedName("pageStart")
  private Integer pageStart = null;

  @SerializedName("pageEnd")
  private Integer pageEnd = null;

  @SerializedName("totalPages")
  private Integer totalPages = null;

  @SerializedName("totalElements")
  private Integer totalElements = null;

  public PagingInfo page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)
   * @return page
  **/
  @ApiModelProperty(example = "null", value = "The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty (because non-existent page was specified or perPage=0 was requested)")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public PagingInfo perPage(Integer perPage) {
    this.perPage = perPage;
    return this;
  }

   /**
   * Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied
   * @return perPage
  **/
  @ApiModelProperty(example = "null", value = "Current page size, describes how many items are in each page. Default value is 100. Maximum value is 1000. If perPage value in the request is greater than 1000, the maximum value (1000) is applied")
  public Integer getPerPage() {
    return perPage;
  }

  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }

  public PagingInfo pageStart(Integer pageStart) {
    this.pageStart = pageStart;
    return this;
  }

   /**
   * The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty
   * @return pageStart
  **/
  @ApiModelProperty(example = "null", value = "The zero-based number of the first element on the current page. Omitted if the page is omitted or result is empty")
  public Integer getPageStart() {
    return pageStart;
  }

  public void setPageStart(Integer pageStart) {
    this.pageStart = pageStart;
  }

  public PagingInfo pageEnd(Integer pageEnd) {
    this.pageEnd = pageEnd;
    return this;
  }

   /**
   * The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty
   * @return pageEnd
  **/
  @ApiModelProperty(example = "null", value = "The zero-based index of the last element on the current page. Omitted if the page is omitted or result is empty")
  public Integer getPageEnd() {
    return pageEnd;
  }

  public void setPageEnd(Integer pageEnd) {
    this.pageEnd = pageEnd;
  }

  public PagingInfo totalPages(Integer totalPages) {
    this.totalPages = totalPages;
    return this;
  }

   /**
   * The total number of pages in a dataset. May be omitted for some resources due to performance reasons
   * @return totalPages
  **/
  @ApiModelProperty(example = "null", value = "The total number of pages in a dataset. May be omitted for some resources due to performance reasons")
  public Integer getTotalPages() {
    return totalPages;
  }

  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  public PagingInfo totalElements(Integer totalElements) {
    this.totalElements = totalElements;
    return this;
  }

   /**
   * The total number of elements in a dataset. May be omitted for some resource due to performance reasons
   * @return totalElements
  **/
  @ApiModelProperty(example = "null", value = "The total number of elements in a dataset. May be omitted for some resource due to performance reasons")
  public Integer getTotalElements() {
    return totalElements;
  }

  public void setTotalElements(Integer totalElements) {
    this.totalElements = totalElements;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PagingInfo pagingInfo = (PagingInfo) o;
    return Objects.equals(this.page, pagingInfo.page) &&
        Objects.equals(this.perPage, pagingInfo.perPage) &&
        Objects.equals(this.pageStart, pagingInfo.pageStart) &&
        Objects.equals(this.pageEnd, pagingInfo.pageEnd) &&
        Objects.equals(this.totalPages, pagingInfo.totalPages) &&
        Objects.equals(this.totalElements, pagingInfo.totalElements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(page, perPage, pageStart, pageEnd, totalPages, totalElements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PagingInfo {\n");
    
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    pageStart: ").append(toIndentedString(pageStart)).append("\n");
    sb.append("    pageEnd: ").append(toIndentedString(pageEnd)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    totalElements: ").append(toIndentedString(totalElements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

