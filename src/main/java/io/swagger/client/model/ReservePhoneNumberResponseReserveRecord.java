/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * ReservePhoneNumberResponseReserveRecord
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class ReservePhoneNumberResponseReserveRecord {
  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("formattedNumber")
  private String formattedNumber = null;

  @SerializedName("reservedTill")
  private DateTime reservedTill = null;

  @SerializedName("reservationId")
  private String reservationId = null;

  /**
   * Phone number status
   */
  public enum StatusEnum {
    @SerializedName("Enabled")
    ENABLED("Enabled"),
    
    @SerializedName("Pending")
    PENDING("Pending"),
    
    @SerializedName("Disabled")
    DISABLED("Disabled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  /**
   * The error code in case of reservation/un-reservation failure
   */
  public enum ErrorEnum {
    @SerializedName("NumberIsAlreadyProvisioned")
    NUMBERISALREADYPROVISIONED("NumberIsAlreadyProvisioned"),
    
    @SerializedName("NumberReserved")
    NUMBERRESERVED("NumberReserved"),
    
    @SerializedName("NumberNotAvailable")
    NUMBERNOTAVAILABLE("NumberNotAvailable");

    private String value;

    ErrorEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("error")
  private ErrorEnum error = null;

  public ReservePhoneNumberResponseReserveRecord phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Phone number in E.164 format without a '+'
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "null", value = "Phone number in E.164 format without a '+'")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public ReservePhoneNumberResponseReserveRecord formattedNumber(String formattedNumber) {
    this.formattedNumber = formattedNumber;
    return this;
  }

   /**
   * Domestic format of a phone number
   * @return formattedNumber
  **/
  @ApiModelProperty(example = "null", value = "Domestic format of a phone number")
  public String getFormattedNumber() {
    return formattedNumber;
  }

  public void setFormattedNumber(String formattedNumber) {
    this.formattedNumber = formattedNumber;
  }

  public ReservePhoneNumberResponseReserveRecord reservedTill(DateTime reservedTill) {
    this.reservedTill = reservedTill;
    return this;
  }

   /**
   * The datetime up to which the number is reserved in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. No value means that number is not reserved anymore
   * @return reservedTill
  **/
  @ApiModelProperty(example = "null", value = "The datetime up to which the number is reserved in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. No value means that number is not reserved anymore")
  public DateTime getReservedTill() {
    return reservedTill;
  }

  public void setReservedTill(DateTime reservedTill) {
    this.reservedTill = reservedTill;
  }

  public ReservePhoneNumberResponseReserveRecord reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * Internal identifier of phone number reservation; encoded data including reservation type (by brand, by account, by session), particular brand/account/session data, and reservation date and time
   * @return reservationId
  **/
  @ApiModelProperty(example = "null", value = "Internal identifier of phone number reservation; encoded data including reservation type (by brand, by account, by session), particular brand/account/session data, and reservation date and time")
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public ReservePhoneNumberResponseReserveRecord status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Phone number status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "Phone number status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ReservePhoneNumberResponseReserveRecord error(ErrorEnum error) {
    this.error = error;
    return this;
  }

   /**
   * The error code in case of reservation/un-reservation failure
   * @return error
  **/
  @ApiModelProperty(example = "null", value = "The error code in case of reservation/un-reservation failure")
  public ErrorEnum getError() {
    return error;
  }

  public void setError(ErrorEnum error) {
    this.error = error;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservePhoneNumberResponseReserveRecord reservePhoneNumberResponseReserveRecord = (ReservePhoneNumberResponseReserveRecord) o;
    return Objects.equals(this.phoneNumber, reservePhoneNumberResponseReserveRecord.phoneNumber) &&
        Objects.equals(this.formattedNumber, reservePhoneNumberResponseReserveRecord.formattedNumber) &&
        Objects.equals(this.reservedTill, reservePhoneNumberResponseReserveRecord.reservedTill) &&
        Objects.equals(this.reservationId, reservePhoneNumberResponseReserveRecord.reservationId) &&
        Objects.equals(this.status, reservePhoneNumberResponseReserveRecord.status) &&
        Objects.equals(this.error, reservePhoneNumberResponseReserveRecord.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, formattedNumber, reservedTill, reservationId, status, error);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservePhoneNumberResponseReserveRecord {\n");
    
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    formattedNumber: ").append(toIndentedString(formattedNumber)).append("\n");
    sb.append("    reservedTill: ").append(toIndentedString(reservedTill)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

