/*
 * RingCentral API
 * RingCentral Connect Platform API
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DeviceInfoExtensionInfo;
import io.swagger.client.model.EmergencyAddressInfo;
import io.swagger.client.model.ModelInfo;
import io.swagger.client.model.PhoneLinesInfo;
import io.swagger.client.model.ShippingInfo;

/**
 * DeviceInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-14T22:06:07.317Z")
public class DeviceInfo {
  @SerializedName("id")
  private String id = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("sku")
  private String sku = null;

  /**
   * Device type. The default value is 'HardPhone'
   */
  public enum TypeEnum {
    @SerializedName("SoftPhone")
    SOFTPHONE("SoftPhone"),
    
    @SerializedName("OtherPhone")
    OTHERPHONE("OtherPhone"),
    
    @SerializedName("HardPhone")
    HARDPHONE("HardPhone");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("serial")
  private String serial = null;

  @SerializedName("computerName")
  private String computerName = null;

  @SerializedName("model")
  private ModelInfo model = null;

  @SerializedName("extension")
  private DeviceInfoExtensionInfo extension = null;

  @SerializedName("emergencyServiceAddress")
  private EmergencyAddressInfo emergencyServiceAddress = null;

  @SerializedName("phoneLines")
  private PhoneLinesInfo phoneLines = null;

  @SerializedName("shipping")
  private ShippingInfo shipping = null;

  @SerializedName("boxBillingId")
  private Integer boxBillingId = null;

  public DeviceInfo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Internal identifier of a device
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Internal identifier of a device")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DeviceInfo uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Canonical URI of a device
   * @return uri
  **/
  @ApiModelProperty(example = "null", value = "Canonical URI of a device")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public DeviceInfo sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'
   * @return sku
  **/
  @ApiModelProperty(example = "null", value = "Device identification number (stock keeping unit) in the format TP-ID [-AT-AC], where TP is device type (HP for RC HardPhone, DV for all other devices including softphone); ID - device model ID; AT -addon type ID; AC - addon count (if any). For example 'HP-56-2-2'")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public DeviceInfo type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Device type. The default value is 'HardPhone'
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "Device type. The default value is 'HardPhone'")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public DeviceInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Device name. Mandatory if ordering \"SoftPhone\" or \"OtherPhone\". Optional for \"HardPhone\". If not specified for HardPhone, then device \"model\" name is used as device \"name\"
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "Device name. Mandatory if ordering \"SoftPhone\" or \"OtherPhone\". Optional for \"HardPhone\". If not specified for HardPhone, then device \"model\" name is used as device \"name\"")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DeviceInfo serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Serial number for HardPhone (is returned only when the phone is shipped and provisioned); endpoint_id for softphone and mobile applications
   * @return serial
  **/
  @ApiModelProperty(example = "null", value = "Serial number for HardPhone (is returned only when the phone is shipped and provisioned); endpoint_id for softphone and mobile applications")
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }

  public DeviceInfo computerName(String computerName) {
    this.computerName = computerName;
    return this;
  }

   /**
   * PC name for softphone
   * @return computerName
  **/
  @ApiModelProperty(example = "null", value = "PC name for softphone")
  public String getComputerName() {
    return computerName;
  }

  public void setComputerName(String computerName) {
    this.computerName = computerName;
  }

  public DeviceInfo model(ModelInfo model) {
    this.model = model;
    return this;
  }

   /**
   * HardPhone model information
   * @return model
  **/
  @ApiModelProperty(example = "null", value = "HardPhone model information")
  public ModelInfo getModel() {
    return model;
  }

  public void setModel(ModelInfo model) {
    this.model = model;
  }

  public DeviceInfo extension(DeviceInfoExtensionInfo extension) {
    this.extension = extension;
    return this;
  }

   /**
   * This attribute can be omitted for unassigned devices
   * @return extension
  **/
  @ApiModelProperty(example = "null", value = "This attribute can be omitted for unassigned devices")
  public DeviceInfoExtensionInfo getExtension() {
    return extension;
  }

  public void setExtension(DeviceInfoExtensionInfo extension) {
    this.extension = extension;
  }

  public DeviceInfo emergencyServiceAddress(EmergencyAddressInfo emergencyServiceAddress) {
    this.emergencyServiceAddress = emergencyServiceAddress;
    return this;
  }

   /**
   * Address for emergency cases. The same emergency address is assigned to all the numbers of one device
   * @return emergencyServiceAddress
  **/
  @ApiModelProperty(example = "null", value = "Address for emergency cases. The same emergency address is assigned to all the numbers of one device")
  public EmergencyAddressInfo getEmergencyServiceAddress() {
    return emergencyServiceAddress;
  }

  public void setEmergencyServiceAddress(EmergencyAddressInfo emergencyServiceAddress) {
    this.emergencyServiceAddress = emergencyServiceAddress;
  }

  public DeviceInfo phoneLines(PhoneLinesInfo phoneLines) {
    this.phoneLines = phoneLines;
    return this;
  }

   /**
   * Phone lines information
   * @return phoneLines
  **/
  @ApiModelProperty(example = "null", value = "Phone lines information")
  public PhoneLinesInfo getPhoneLines() {
    return phoneLines;
  }

  public void setPhoneLines(PhoneLinesInfo phoneLines) {
    this.phoneLines = phoneLines;
  }

  public DeviceInfo shipping(ShippingInfo shipping) {
    this.shipping = shipping;
    return this;
  }

   /**
   * Shipping information, according to which devices (in case of \"HardPhone\") or e911 stickers (in case of \"SoftPhone\" and \"OtherPhone\") will be delivered to the customer
   * @return shipping
  **/
  @ApiModelProperty(example = "null", value = "Shipping information, according to which devices (in case of \"HardPhone\") or e911 stickers (in case of \"SoftPhone\" and \"OtherPhone\") will be delivered to the customer")
  public ShippingInfo getShipping() {
    return shipping;
  }

  public void setShipping(ShippingInfo shipping) {
    this.shipping = shipping;
  }

  public DeviceInfo boxBillingId(Integer boxBillingId) {
    this.boxBillingId = boxBillingId;
    return this;
  }

   /**
   * Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to identify the device to be ordered. Either \"model\" structure, or \"boxBillingId\" must be specified for HardPhone
   * @return boxBillingId
  **/
  @ApiModelProperty(example = "null", value = "Box billing identifier of a device. Applicable only for HardPhones. It is an alternative way to identify the device to be ordered. Either \"model\" structure, or \"boxBillingId\" must be specified for HardPhone")
  public Integer getBoxBillingId() {
    return boxBillingId;
  }

  public void setBoxBillingId(Integer boxBillingId) {
    this.boxBillingId = boxBillingId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceInfo deviceInfo = (DeviceInfo) o;
    return Objects.equals(this.id, deviceInfo.id) &&
        Objects.equals(this.uri, deviceInfo.uri) &&
        Objects.equals(this.sku, deviceInfo.sku) &&
        Objects.equals(this.type, deviceInfo.type) &&
        Objects.equals(this.name, deviceInfo.name) &&
        Objects.equals(this.serial, deviceInfo.serial) &&
        Objects.equals(this.computerName, deviceInfo.computerName) &&
        Objects.equals(this.model, deviceInfo.model) &&
        Objects.equals(this.extension, deviceInfo.extension) &&
        Objects.equals(this.emergencyServiceAddress, deviceInfo.emergencyServiceAddress) &&
        Objects.equals(this.phoneLines, deviceInfo.phoneLines) &&
        Objects.equals(this.shipping, deviceInfo.shipping) &&
        Objects.equals(this.boxBillingId, deviceInfo.boxBillingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uri, sku, type, name, serial, computerName, model, extension, emergencyServiceAddress, phoneLines, shipping, boxBillingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    computerName: ").append(toIndentedString(computerName)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    emergencyServiceAddress: ").append(toIndentedString(emergencyServiceAddress)).append("\n");
    sb.append("    phoneLines: ").append(toIndentedString(phoneLines)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    boxBillingId: ").append(toIndentedString(boxBillingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

